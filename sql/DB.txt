CREATE TABLE extractor.trades (
id BIGINT AUTO_INCREMENT NOT NULL,
exchange_id CHAR(20) NOT NULL,
symbol CHAR(20) NOT NULL,
trade_ts TIMESTAMP NOT NULL,
amount NUMERIC(28,10) NOT NULL,
price NUMERIC(28,10) NOT NULL,
rate NUMERIC(28,10),
period LONG,
tid CHAR(20),
 CONSTRAINT PK_trades PRIMARY KEY (id));


CREATE TABLE extractor.markets (
exchange_id CHAR(20) NOT NULL,
symbol CHAR(20) NOT NULL,
evaluated BOOL NOT NULL,
CONSTRAINT PK_exchange_id PRIMARY KEY (exchange_id, symbol));


CREATE TABLE extractor.profitabilities (
exchange_id CHAR(20) NOT NULL,
origin CHAR(20) NOT NULL,
transitory_1 CHAR(20) NOT NULL,
transitory_2 CHAR(20) NOT NULL,
target CHAR(20) NOT NULL,
profittability NUMERIC(28,10) NOT NULL,
sell_limit NUMERIC(28,10) NOT NULL,
buy_limit NUMERIC(28,10) NOT NULL,
cross_origin_target NUMERIC(28,10) NOT NULL,
cross_int1_target NUMERIC(28,10) NOT NULL,
cross_int1_origin NUMERIC(28,10) NOT NULL,
fee NUMERIC(28,10) NOT NULL,
CONSTRAINT PK_exchange_id PRIMARY KEY (exchange_id, origin, transitory_1, transitory_2, target));

CREATE TABLE extractor.aggregate_books (
id BIGINT AUTO_INCREMENT NOT NULL,
exchange_id CHAR(20) NOT NULL,
symbol CHAR(20) NOT NULL,
lot NUMERIC(20) NOT NULL,
price NUMERIC(28,10) NOT NULL,
count_number NUMERIC(28,10) NOT NULL,
amount NUMERIC(28,10) NOT NULL,
obsolete BOOL NOT NULL,
 CONSTRAINT PK_trades PRIMARY KEY (id));

CREATE INDEX IDX_aggregate_books ON extractor.aggregate_books (exchange_id , symbol, lot, price, count_number, amount);

/*
CREATE TABLE extractor.last_aggregate_books AS SELECT exchange_id, symbol, 1 ask, 0 price, 0 count_number, 0 amount FROM aggregate_books;
ALTER TABLE extractor.last_aggregate_books ADD CONSTRAINT PK_last_aggregate PRIMARY KEY (exchange_id, symbol, ask, price);
*/

CREATE VIEW extractor.best_books AS
    (SELECT bookBid.price, bookBid.exchange_id, bookBid.symbol, 1 bid, SUM(count_number) count_number, SUM(amount) amount
        FROM extractor.aggregate_books bookBid
        WHERE bookBid.amount > 0 and
    		bookBid.price = (SELECT MAX(bidMax.price) FROM extractor.aggregate_books bidMax WHERE bookBid.exchange_id = bidMax.exchange_id AND bookBid.symbol = bidMax.symbol AND bidMax.amount > 0)
        GROUP BY bookBid.price, bookBid.exchange_id, bookBid.symbol, bid)
    UNION
    (SELECT bookAsk.price, bookAsk.exchange_id, bookAsk.symbol, -1 ask, SUM(count_number) count_number, SUM(amount) amount
        FROM extractor.aggregate_books bookAsk
        WHERE bookAsk.amount < 0 and
            bookAsk.price = (SELECT MIN(askMax.price) FROM extractor.aggregate_books askMax WHERE bookAsk.exchange_id = askMax.exchange_id AND bookAsk.symbol = askMax.symbol AND askMax.amount < 0)
        GROUP BY bookAsk.price, bookAsk.exchange_id, bookAsk.symbol, ask)

CREATE TABLE extractor.historical_arbitrages (
id BIGINT AUTO_INCREMENT NOT NULL,
exchange_id CHAR(20) NOT NULL,
symbol_start CHAR(20) NOT NULL,
type_start CHAR(20) NOT NULL,
time_start TIMESTAMP NOT NULL,
tid_start CHAR(20),
symbol_transitory CHAR(20) NOT NULL,
type_transitory CHAR(20) NOT NULL,
time_transitory TIMESTAMP NOT NULL,
tid_transitory CHAR(20),
symbol_end CHAR(20) NOT NULL,
type_end CHAR(20) NOT NULL,
time_end TIMESTAMP NOT NULL,
tid_end CHAR(20),
amount_start NUMERIC(28,10) NOT NULL,
 CONSTRAINT PK_trades PRIMARY KEY (id));